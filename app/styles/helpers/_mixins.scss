@mixin flex($direction: row, $content: null, $items: null, $wrap: null) {
  display: flex;
  flex-direction: $direction;
  justify-content: $content;
  align-items: $items;
  flex-wrap: $wrap;
}

@mixin flexCenter() {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin gradient(
  $color1,
  $color2,
  $alpha1: 1,
  $alpha2: 1,
  $direction: to right
) {
  background-image: linear-gradient(
    $direction,
    rgba($color1, $alpha1),
    rgba($color2, $alpha2)
  );
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    box-shadow: inset $top $left $blur $color;
  } @else {
    box-shadow: $top $left $blur $color;
  }
}

@mixin button($bgColor: null, $color: null, $mw: null, $boxshadow: null) {
  border: 0;
  cursor: pointer;
  padding: 1.5rem;
  min-width: $mw;
  color: $color;
  background-color: $bgColor;
  text-transform: uppercase;
  outline: none;
  box-shadow: $boxshadow;
  font-family: inherit;
  transition: 0.2s;
}

@mixin position(
  $position,
  $top: null,
  $left: null,
  $right: null,
  $bottom: null
) {
  position: $position;
  left: $left;
  top: $top;
  bottom: $bottom;
  right: $right;
}

@mixin absolute($args...) {
  @include position(absolute, $args...);
}

@mixin absoluteCenter($direction) {
  position: absolute;
  @if $direction == "left" {
    left: 50%;
    transform: translateX(-50%);
  }
  @if $direction == "top" {
    top: 50%;
    transform: translateY(-50%);
  }
  @if $direction == "both" {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin minWidth($breakpoint) {
  @media screen and (min-width: $breakpoint) {
    @content;
  }
}

@mixin maxWidth($breakpoint) {
  @media screen and (max-width: $breakpoint) {
    @content;
  }
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin hideScroll() {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin textClamp($rows: 1, $size: 100%) {
  display: -webkit-box;
  -webkit-line-clamp: $rows;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  width: $size;
  max-width: $size;
  white-space: pre-wrap;
  word-break: break-word; // rớt xuống theo từ
}

@mixin flexBox(
  $item: stretch,
  $content: flex-start,
  $direction: row,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $content;
  align-items: $item;
  flex-wrap: $wrap;
}

@mixin hoverEffect($itemClass, $contentClass, $transform: "true") {
  #{$itemClass} {
    position: relative;
    z-index: 1;
    transition: transform 0.25s linear;
    will-change: $transform;
    #{$contentClass} {
      opacity: 0;
      visibility: hidden;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      padding: 2rem;
      background: linear-gradient(
        to bottom,
        rgba($primary-color, 0.8),
        rgba($secondary-color, 0.8)
      );
      z-index: 2;
      flex-direction: column;
      @include flexCenter;
    }
    @if $transform == "true" {
      &::after {
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        will-change: $transform;
        background-color: $third-color;
        z-index: -1;
        transition: transform 0.25s linear;
      }
    }
    &:hover {
      #{$contentClass} {
        opacity: 1;
        visibility: visible;
      }
      @if $transform == "true" {
        transform: translate(-1rem, -1rem);
        &::after {
          transform: translate(1rem, 1rem);
        }
      }
    }
  }
}

@mixin touchSlider($width: 80%, $gap: 2.5rem, $padding: 1rem) {
  display: grid !important;
  justify-content: flex-start !important;
  grid-auto-columns: $width;
  grid-auto-flow: column;
  grid-template-columns: unset;
  grid-column-gap: $gap;
  overflow-x: auto;
  padding: $padding;
  scroll-snap-type: x mandatory;
  scroll-snap-stop: always;
  @include hideScroll;
  & > * {
    scroll-snap-align: center;
    width: auto;
  }
}
